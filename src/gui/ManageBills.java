/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui;

import gui.custom.CustomRectangularButton;
import dao.*;
import entities.*;
import gui.custom.TableActionCellDelete;
import gui.custom.TableActionCellDeleteRender;
import gui.custom.TableActionCellView;
import gui.custom.TableActionCellViewRender;
import gui.custom.TableActionEvent;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import util.FrameInvoice;
import util.PrintBill;

/**
 *
 * @author Trần Ngọc Huyền
 */
public class ManageBills extends javax.swing.JPanel {

    private static DAOOrder doo = new DAOOrder();
    private static DefaultTableModel tableBillModel;

    /**
     * Creates new form ManageBill
     */
    public ManageBills() {
        initComponents();
        customTable();
        loadCurrentBills();
    }
    
    public static void loadCurrentBills() {
        startDate.setDate(new Date());
        endDate.setDate(new Date());
        Date currentDate = new Date();
        
        Calendar calendar = Calendar.getInstance();
        
        calendar.setTime(currentDate); 
        calendar.add(Calendar.DATE, -1);
        Date lastDate = calendar.getTime();
        
        calendar.setTime(currentDate); 
        calendar.add(Calendar.DATE, 1);
        Date nextDate = calendar.getTime();
        
        lastDate.setHours(0);
        lastDate.setMinutes(0);
        lastDate.setSeconds(0);
        
        nextDate.setHours(0);
        nextDate.setMinutes(0);
        nextDate.setSeconds(0);
        
        
        loadData(lastDate, nextDate);
    }

    private void customTable() {
        TableActionEvent event = new TableActionEvent() {
            @Override
            public void onDelete(int row) {
                if (tableBill.isEditing()) {
                    tableBill.getCellEditor().stopCellEditing();
                }
                tableBillModel.removeRow(row);

            }

            @Override
            public void onView(int row) {
                String orderID = tableBill.getValueAt(row, 0).toString();
                Order o = doo.findById(orderID);
                PrintBill pB = new PrintBill();
                new FrameInvoice(o, pB.getPrinterJob(o), false); //n
                tableBill.getCellEditor().stopCellEditing();
            }
        };
        tableBill.getColumnModel().getColumn(5).setCellRenderer(new TableActionCellViewRender());
        tableBill.getColumnModel().getColumn(5).setCellEditor(new TableActionCellView(event));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        filler6 = new javax.swing.Box.Filler(new java.awt.Dimension(100, 0), new java.awt.Dimension(50, 0), new java.awt.Dimension(100, 32767));
        jLabel1 = new javax.swing.JLabel();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(100, 0), new java.awt.Dimension(50, 0), new java.awt.Dimension(100, 32767));
        startDate = new com.toedter.calendar.JDateChooser();
        filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(100, 0), new java.awt.Dimension(50, 0), new java.awt.Dimension(100, 32767));
        jLabel2 = new javax.swing.JLabel();
        filler4 = new javax.swing.Box.Filler(new java.awt.Dimension(100, 0), new java.awt.Dimension(50, 0), new java.awt.Dimension(100, 32767));
        endDate = new com.toedter.calendar.JDateChooser();
        filler5 = new javax.swing.Box.Filler(new java.awt.Dimension(100, 0), new java.awt.Dimension(50, 0), new java.awt.Dimension(100, 32767));
        btnFilter = new CustomRectangularButton(new Color[] {Color.WHITE, new Color(102, 44, 33), new Color(118, 68, 52)});
        jPanel2 = new javax.swing.JPanel();
        scroll = new javax.swing.JScrollPane();
        tableBill = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        lblSumOfBills = new javax.swing.JLabel();

        setEnabled(false);
        setLayout(new java.awt.BorderLayout());

        jPanel1.setBackground(new java.awt.Color(210, 180, 160));
        jPanel1.setPreferredSize(new java.awt.Dimension(907, 60));
        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.LINE_AXIS));
        jPanel1.add(filler6);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setText("Từ ngày: ");
        jPanel1.add(jLabel1);
        jPanel1.add(filler2);

        startDate.setDateFormatString("dd/MM/yyyy");
        startDate.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jPanel1.add(startDate);
        jPanel1.add(filler3);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel2.setText("Đến ngày: ");
        jPanel1.add(jLabel2);
        jPanel1.add(filler4);

        endDate.setDateFormatString("dd/MM/yyyy");
        endDate.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jPanel1.add(endDate);
        jPanel1.add(filler5);

        btnFilter.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnFilter.setText("Lọc");
        btnFilter.setMaximumSize(new java.awt.Dimension(72, 50));
        btnFilter.setPreferredSize(new java.awt.Dimension(100, 25));
        btnFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFilterActionPerformed(evt);
            }
        });
        jPanel1.add(btnFilter);

        add(jPanel1, java.awt.BorderLayout.NORTH);

        jPanel2.setLayout(new java.awt.BorderLayout());

        String[] header = {"Mã", "Ngày lập", "Nhân viên", "Khách hàng", "Tổng tiền", "Xem"};
        tableBillModel = new DefaultTableModel(header, 0) {
            boolean[] canEdit = new boolean[]{
                false, false, false, false, false, true
            };

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        };
        tableBill.setModel(tableBillModel);
        tableBill.setFont(new java.awt.Font("Segoe UI", 0, 16));
        tableBill.getTableHeader().setResizingAllowed(false);
        for (int i = 0; i < tableBill.getColumnCount(); i++) {
            tableBill.getColumnModel().getColumn(i).setResizable(false);
        }
        tableBill.getTableHeader().setPreferredSize(new Dimension(tableBill.getColumnModel().getTotalColumnWidth(), 80));
        tableBill.getTableHeader().setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, new Color(102, 44, 33)));
        tableBill.getTableHeader().setDefaultRenderer(new javax.swing.table.DefaultTableCellRenderer() {
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                JLabel label = (JLabel) super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                label.setBackground(new Color(235,228,226));  // Thiết lập màu nền
                label.setOpaque(true);  // Đảm bảo màu nền được áp dụng
                label.setFont(new Font("Segoe UI", Font.BOLD, 17));
                label.setHorizontalAlignment(SwingConstants.CENTER);  // Căn giữa văn bản
                return label;
            }
        });

        // Thiết lập DefaultTableCellRenderer để căn giữa
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(SwingConstants.CENTER);

        // Áp dụng renderer này cho tất cả các cột
        for (int i = 0; i < tableBill.getColumnCount(); i++) {
            TableColumn column = tableBill.getColumnModel().getColumn(i);
            column.setCellRenderer(centerRenderer);
        }

        tableBill.setRowHeight(80);

        tableBill.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        tableBill.getTableHeader().setReorderingAllowed(false);

        TableColumnModel columnModel = tableBill.getColumnModel();
        TableColumn col0 = columnModel.getColumn(0);
        TableColumn col1 = columnModel.getColumn(1);
        TableColumn col2 = columnModel.getColumn(2);
        TableColumn col3 = columnModel.getColumn(3);
        TableColumn col4 = columnModel.getColumn(4);
        TableColumn col5 = columnModel.getColumn(5);

        col0.setPreferredWidth(30);
        col1.setPreferredWidth(120);
        col2.setPreferredWidth(100);
        col3.setPreferredWidth(80);
        col4.setPreferredWidth(100);
        col4.setPreferredWidth(50);

        tableBill.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        tableBill.getTableHeader().setResizingAllowed(false);
        for (int i = 0; i < tableBill.getColumnCount(); i++) {
            tableBill.getColumnModel().getColumn(i).setResizable(false);
        }
        tableBill.setModel(tableBillModel);
        tableBill.setSelectionBackground(new java.awt.Color(102, 44, 33));
        scroll.setViewportView(tableBill);
        scroll.getViewport().setBackground(new Color(235, 228, 226));

        jPanel2.add(scroll, java.awt.BorderLayout.CENTER);

        add(jPanel2, java.awt.BorderLayout.CENTER);

        jPanel3.setBackground(new java.awt.Color(210, 180, 160));
        jPanel3.setPreferredSize(new java.awt.Dimension(1200, 50));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel4.setText("Tổng số hóa đơn: ");

        lblSumOfBills.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblSumOfBills.setText("0");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel4)
                .addGap(36, 36, 36)
                .addComponent(lblSumOfBills, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(849, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                .addComponent(lblSumOfBills, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE))
        );

        add(jPanel3, java.awt.BorderLayout.SOUTH);
    }// </editor-fold>//GEN-END:initComponents

    private void btnFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFilterActionPerformed
        Date start = startDate.getDate();
        Date end = endDate.getDate();
        loadData(start, end);
       
    }//GEN-LAST:event_btnFilterActionPerformed

    private static void loadData(Date start, Date end) {
        tableBillModel.setRowCount(0);
        if (start.compareTo(end) > 0) {
//            JOptionPane.showMessageDialog(this, "Ngày bắt đầu phải sau ngày hiện tại");
            return;
        }

        List<Order> listOrder = doo.getListOrderInTimePeriod(start, end);
//        System.out.println(listOrder.size());
//        System.out.println(listOrder.size());
        for (Order o : listOrder) {
            tableBillModel.addRow(new Object[]{o.getOrderID(), o.getOrderDate(), o.getEmp().getName(), o.getCust().getName(), o.getTotalDue()});
        }
        if (listOrder.size() > 0) {
            lblSumOfBills.setText(listOrder.size() + "");
        } else {
            lblSumOfBills.setText("0");
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFilter;
    private static com.toedter.calendar.JDateChooser endDate;
    private javax.swing.Box.Filler filler2;
    private javax.swing.Box.Filler filler3;
    private javax.swing.Box.Filler filler4;
    private javax.swing.Box.Filler filler5;
    private javax.swing.Box.Filler filler6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private static javax.swing.JLabel lblSumOfBills;
    private javax.swing.JScrollPane scroll;
    private static com.toedter.calendar.JDateChooser startDate;
    private javax.swing.JTable tableBill;
    // End of variables declaration//GEN-END:variables
}
